// -*- Java -*- This Cup file was machine-generated by BNFC
package BimsS;

parser code {:
  public BimsS.Absyn.Program pProgram() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (BimsS.Absyn.Program) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal BimsS.Absyn.Program Program;
nonterminal BimsS.Absyn.Stm Stm;
nonterminal BimsS.Absyn.ListStm ListStm;
nonterminal BimsS.Absyn.Var Var;
nonterminal BimsS.Absyn.BExp BExp;
nonterminal BimsS.Absyn.BExp BExp2;
nonterminal BimsS.Absyn.BExp BExp1;
nonterminal BimsS.Absyn.BExp BExp3;
nonterminal BimsS.Absyn.AExp AExp1;
nonterminal BimsS.Absyn.AExp AExp2;
nonterminal BimsS.Absyn.AExp AExp3;
nonterminal BimsS.Absyn.AExp AExp;

terminal _SYMB_0;    //   :=
terminal _SYMB_1;    //   (
terminal _SYMB_2;    //   )
terminal _SYMB_3;    //   {
terminal _SYMB_4;    //   }
terminal _SYMB_5;    //   [
terminal _SYMB_6;    //   ]
terminal _SYMB_7;    //   ;
terminal _SYMB_8;    //   =
terminal _SYMB_9;    //   <
terminal _SYMB_10;    //   &&
terminal _SYMB_11;    //   +
terminal _SYMB_12;    //   -
terminal _SYMB_13;    //   *
terminal _SYMB_14;    //   do
terminal _SYMB_15;    //   else
terminal _SYMB_16;    //   if
terminal _SYMB_17;    //   int
terminal _SYMB_18;    //   not
terminal _SYMB_19;    //   print
terminal _SYMB_20;    //   skip
terminal _SYMB_21;    //   then
terminal _SYMB_22;    //   while



terminal Integer _INTEGER_;

terminal String _IDENT_;



start with Program;


Program ::= ListStm:p_1  {: RESULT = new BimsS.Absyn.PDefs(p_1); :} 
;
Stm ::= Var:p_1 _SYMB_0 AExp:p_3  {: RESULT = new BimsS.Absyn.SAss(p_1,p_3); :} 
  | _SYMB_20  {: RESULT = new BimsS.Absyn.SSkip(); :}
  | _SYMB_16 _SYMB_1 BExp:p_3 _SYMB_2 _SYMB_21 _SYMB_3 ListStm:p_7 _SYMB_4 _SYMB_15 _SYMB_3 ListStm:p_11 _SYMB_4  {: RESULT = new BimsS.Absyn.SIf(p_3,p_7,p_11); :}
  | _SYMB_22 _SYMB_1 BExp:p_3 _SYMB_2 _SYMB_14 _SYMB_3 ListStm:p_7 _SYMB_4  {: RESULT = new BimsS.Absyn.SWhile(p_3,p_7); :}
  | _SYMB_19 Var:p_2  {: RESULT = new BimsS.Absyn.SPrint(p_2); :}
  | _SYMB_17 _IDENT_:p_2  {: RESULT = new BimsS.Absyn.SInt(p_2); :}
  | _SYMB_17 _IDENT_:p_2 _SYMB_5 AExp:p_4 _SYMB_6  {: RESULT = new BimsS.Absyn.SIntArr(p_2,p_4); :}
;
ListStm ::=  /* empty */  {: RESULT = new BimsS.Absyn.ListStm(); :} 
  | Stm:p_1  {: RESULT = new BimsS.Absyn.ListStm(); RESULT.addLast(p_1); :}
  | Stm:p_1 _SYMB_7 ListStm:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
Var ::= _IDENT_:p_1  {: RESULT = new BimsS.Absyn.VSolo(p_1); :} 
  | _IDENT_:p_1 _SYMB_5 AExp:p_3 _SYMB_6  {: RESULT = new BimsS.Absyn.VMult(p_1,p_3); :}
;
BExp ::= AExp:p_1 _SYMB_8 AExp:p_3  {: RESULT = new BimsS.Absyn.BEq(p_1,p_3); :} 
  | AExp:p_1 _SYMB_9 AExp:p_3  {: RESULT = new BimsS.Absyn.BGt(p_1,p_3); :}
  | BExp1:p_1  {: RESULT = p_1; :}
;
BExp2 ::= _SYMB_18 BExp3:p_2  {: RESULT = new BimsS.Absyn.BNeg(p_2); :} 
  | BExp2:p_1 _SYMB_10 BExp3:p_3  {: RESULT = new BimsS.Absyn.BAnd(p_1,p_3); :}
  | BExp3:p_1  {: RESULT = p_1; :}
;
BExp1 ::= BExp2:p_1  {: RESULT = p_1; :} 
;
BExp3 ::= _SYMB_1 BExp:p_2 _SYMB_2  {: RESULT = p_2; :} 
;
AExp1 ::= AExp1:p_1 _SYMB_11 AExp2:p_3  {: RESULT = new BimsS.Absyn.APlus(p_1,p_3); :} 
  | AExp1:p_1 _SYMB_12 AExp2:p_3  {: RESULT = new BimsS.Absyn.AMinus(p_1,p_3); :}
  | AExp2:p_1  {: RESULT = p_1; :}
;
AExp2 ::= AExp2:p_1 _SYMB_13 AExp3:p_3  {: RESULT = new BimsS.Absyn.ATimes(p_1,p_3); :} 
  | AExp3:p_1  {: RESULT = p_1; :}
;
AExp3 ::= Var:p_1  {: RESULT = new BimsS.Absyn.AVar(p_1); :} 
  | _INTEGER_:p_1  {: RESULT = new BimsS.Absyn.AInt(p_1); :}
  | _SYMB_1 AExp:p_2 _SYMB_2  {: RESULT = p_2; :}
;
AExp ::= AExp1:p_1  {: RESULT = p_1; :} 
;

